// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`API API/Resources should be possible to add filters to a resource 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": Object {
    "schedulable_with_contact": "1,2",
  },
  "url": "https://api.example.com/subjects/1",
}
`;

exports[`API API/Resources should be possible to add filters to a resource that has special filter syntax 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": Object {
    "filter[type]": "cumulio",
  },
  "url": "https://api.example.com/integrations",
}
`;

exports[`API API/Resources should be possible to add includes to the a single subject 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": Object {
    "include": "questions,subject_category",
  },
  "url": "https://api.example.com/subjects/1",
}
`;

exports[`API API/Resources should be possible to add includes to the subjects collection 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": Object {
    "include": "questions,subject_category",
  },
  "url": "https://api.example.com/subjects",
}
`;

exports[`API API/Resources should be possible to create a more advanced combination of calls (timetable) 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": Object {
    "end": "2017-12-26",
    "office": 1308,
    "start": "2017-12-21",
  },
  "url": "https://api.example.com/subjects/316/timetable",
}
`;

exports[`API API/Resources should be possible to create an entity 1`] = `
Object {
  "data": Object {
    "answers": Array [],
    "customer": Object {},
    "initiated_by_type": "customer",
    "meeting_type": "office",
    "office_id": 456,
    "possibilities": Array [],
    "subject_id": 123,
  },
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
    "Content-Type": "application/json;charset=utf-8",
    "X-Im-Not-A-Robot": "The response goes here, internally this gets mapped to a header",
  },
  "method": "post",
  "params": undefined,
  "url": "https://api.example.com/appointments",
}
`;

exports[`API API/Resources should be possible to create an entity and add includes 1`] = `
Object {
  "data": Object {
    "answers": Array [],
    "customer": Object {},
    "initiated_by_type": "customer",
    "meeting_type": "office",
    "office_id": 456,
    "possibilities": Array [],
    "subject_id": 123,
  },
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
    "Content-Type": "application/json;charset=utf-8",
    "X-Im-Not-A-Robot": "The response goes here, internally this gets mapped to a header",
  },
  "method": "post",
  "params": Object {
    "include": "subject",
  },
  "url": "https://api.example.com/appointments",
}
`;

exports[`API API/Resources should be possible to create an entity without recaptcha header 1`] = `
Object {
  "data": Object {
    "answers": Array [],
    "customer": Object {},
    "initiated_by_type": "customer",
    "meeting_type": "office",
    "office_id": 456,
    "possibilities": Array [],
    "subject_id": 123,
  },
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
    "Content-Type": "application/json;charset=utf-8",
  },
  "method": "post",
  "params": undefined,
  "url": "https://api.example.com/appointments",
}
`;

exports[`API API/Resources should be possible to delete an entity 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "delete",
  "params": undefined,
  "url": "https://api.example.com/appointments/1207",
}
`;

exports[`API API/Resources should be possible to disable certain actions (delete) on a resource 1`] = `"[CONFIG]: You tried to call \`.delete()\` but this method is currently not allowed."`;

exports[`API API/Resources should be possible to disable certain actions (new) but the other methods should still be possible 1`] = `"[CONFIG]: You tried to call \`.new({\\"id\\":\\"new identity id\\"})\` but this method is currently not allowed."`;

exports[`API API/Resources should be possible to disable certain actions (new) but the other methods should still be possible 2`] = `"[CONFIG]: You tried to call \`.update({\\"id\\":\\"new identity id\\"})\` but this method is currently not allowed."`;

exports[`API API/Resources should be possible to disable certain actions (new) but the other methods should still be possible 3`] = `"[CONFIG]: You tried to call \`.delete()\` but this method is currently not allowed."`;

exports[`API API/Resources should be possible to disable certain actions (new) on a resource 1`] = `"[CONFIG]: You tried to call \`.new({\\"id\\":\\"new identity id\\"})\` but this method is currently not allowed."`;

exports[`API API/Resources should be possible to disable certain actions (update) on a resource 1`] = `"[CONFIG]: You tried to call \`.update({\\"id\\":\\"new id\\"})\` but this method is currently not allowed."`;

exports[`API API/Resources should be possible to make subsequent calls to include to add multiple includes 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": Object {
    "include": "questions,subject_category",
  },
  "url": "https://api.example.com/subjects",
}
`;

exports[`API API/Resources should be possible to merge filters with the same name 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": Object {
    "schedulable_with_contact": "1,2,3",
  },
  "url": "https://api.example.com/subjects/1",
}
`;

exports[`API API/Resources should be possible to patch an entity 1`] = `
Object {
  "data": Object {
    "cancelled_by_id": "customer id goes here",
    "cancelled_by_type": "customer",
    "state": "cancelled",
  },
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
    "Content-Type": "application/json;charset=utf-8",
  },
  "method": "patch",
  "params": undefined,
  "url": "https://api.example.com/appointments/1207",
}
`;

exports[`API API/Resources should be possible to patch an entity and add includes 1`] = `
Object {
  "data": Object {
    "cancelled_by_id": "customer id goes here",
    "cancelled_by_type": "customer",
    "state": "cancelled",
  },
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
    "Content-Type": "application/json;charset=utf-8",
  },
  "method": "patch",
  "params": Object {
    "include": "customer",
  },
  "url": "https://api.example.com/appointments/1207",
}
`;

exports[`API API/Resources should be possible to read and patch when branched from the same base promise (do not mutate original promise) 1`] = `
Object {
  "data": Object {
    "cancelled_by_id": "customer id goes here",
    "cancelled_by_type": "customer",
    "state": "cancelled",
  },
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
    "Content-Type": "application/json;charset=utf-8",
  },
  "method": "patch",
  "params": undefined,
  "url": "https://api.example.com/appointments/1207",
}
`;

exports[`API API/Resources should be possible to read and patch when branched from the same base promise (do not mutate original promise) 2`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.example.com/appointments/1207",
}
`;

exports[`API API/Resources should be possible to request a single subject 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.example.com/subjects/1",
}
`;

exports[`API API/Resources should be possible to request a subjects collection 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.example.com/subjects",
}
`;

exports[`API API/Resources should be possible to use a shorthand for using external ids 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": Object {
    "external_id": "abc123",
  },
  "url": "https://api.example.com/customers",
}
`;

exports[`API API/Resources should be possible to use shorthands (timetable) 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": Object {
    "end": "2017-12-26",
    "office": 1308,
    "start": "2017-12-21",
  },
  "url": "https://api.example.com/subjects/316/timetable",
}
`;

exports[`API API/Resources should be possible to use shorthands (timetable) with optional values like contacts 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": Object {
    "contacts": "1,2,3",
    "end": "2017-12-26",
    "office": 1308,
    "start": "2017-12-21",
  },
  "url": "https://api.example.com/subjects/316/timetable",
}
`;

exports[`API API/Resources should be possible to use subresources 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.example.com/subjects/1/questions",
}
`;

exports[`API API/Resources should be possible to use subresources by id and includes 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": Object {
    "include": "options",
  },
  "url": "https://api.example.com/subjects/1/questions/2",
}
`;

exports[`API API/Resources should be possible to use subresources with its id 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.example.com/subjects/1/questions/2",
}
`;

exports[`API API/Resources should default to true when a filter is given with no value 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": Object {
    "schedulable": true,
  },
  "url": "https://api.example.com/subjects/1",
}
`;

exports[`API API/Resources should filter out undefined values when using filters 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": Object {
    "schedulable_with_contact": "1,2",
  },
  "url": "https://api.example.com/subjects/1",
}
`;

exports[`API API/Resources should make all the includes unique 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": Object {
    "include": "questions,subject_category",
  },
  "url": "https://api.example.com/subjects",
}
`;

exports[`API API/Resources should result in a single resource response when using external identifiers 1`] = `
Object {
  "data": Object {
    "external_id": "abc123",
    "id": "123",
  },
  "errors": undefined,
  "headers": undefined,
  "meta": undefined,
  "status": 200,
  "warnings": undefined,
}
`;

exports[`API API/Resources should throw an error when a subresource is used but no id is provided 1`] = `"[RESOURCE]: You tried to call \`.subjects(/* MISSING IDENTIFIER */).questions()\` but the parent id is missing."`;

exports[`API API/Resources should throw an error when a subresource with id is used but no parent id is provided 1`] = `"[RESOURCE]: You tried to call \`.subjects(/* MISSING IDENTIFIER */).questions(123)\` but the parent id is missing."`;

exports[`API API/Resources should throw an error when an external://abc123 call returns multiple records 1`] = `[Error: [RESPONSE]: Multiple results found]`;

exports[`API API/Resources should throw an error when an external://abc123 call returns multiple records 2`] = `
Array [
  Object {
    "external_id": "abc123",
    "id": "123",
  },
  Object {
    "external_id": "abc123",
    "id": "456",
  },
]
`;

exports[`API API/Resources should throw an error when an external://abc123 call returns no records 1`] = `[Error: [RESPONSE]: No results found]`;

exports[`API API/Resources should throw an error when an external://abc123 call returns no records 2`] = `Array []`;

exports[`API API/Resources should throw an error when calling a non existing filter function 1`] = `"[RESOURCE]: item.nonExistingMethod is not a function. You can only call \`.category_id()\`, \`.external_id()\`, \`.schedulable_at_office()\`, \`.schedulable_with_contact()\` or \`.schedulable()\`."`;

exports[`API API/Resources should throw an error when filter did not receive a callback 1`] = `"[RESOURCE]: \`.filter()\` expects a callback, but is given \`.filter(undefined)\`"`;

exports[`API API/Resources should throw an error when include is used before the subresource is used 1`] = `"[RESOURCE]: You tried to call \`.questions()\` as a sub resource on \`.subjects(1)\`, but \`.include(\\"subject_category\\")\` was already called and you can not call \`.include()\` before calling a sub resource."`;

exports[`API API/Resources should throw an error when include is used before the subresource is used 2`] = `"[RESOURCE]: You tried to call \`.questions(123)\` as a sub resource on \`.subjects(1)\`, but \`.include(\\"subject_category\\")\` was already called and you can not call \`.include()\` before calling a sub resource."`;

exports[`API API/Resources should throw an error when including a value but there are no includes defined on the resource 1`] = `"[RESOURCE]: You tried to call \`.include(\\"invalid\\")\` but there are no includes defined for timetable."`;

exports[`API API/Resources should throw an error when including a value that is not defined on the resource 1`] = `"[RESOURCE]: You tried to call \`.include(\\"invalid\\")\` but the only valid includes for subjects are \`questions\`, \`subject_category\`, \`languages\` and \`languages.translations\`."`;

exports[`API API/Resources should throw an error when no values are passed for the timetable shorthand 1`] = `"[RESOURCE]: You tried to call .timetable({}) but \`subject\`, \`office\`, \`start\` and \`end\` are required."`;

exports[`API API/Resources should throw an error when required props are missing from a shorthand call (timetable) 1`] = `"[RESOURCE]: You tried to call .timetable({\\"subject\\":316,\\"end\\":\\"2017-12-26\\"}) but \`office\` and \`start\` are also required."`;

exports[`API API/Response should normalize the response when the call fails 1`] = `
Object {
  "data": Array [],
  "errors": undefined,
  "headers": undefined,
  "meta": Array [],
  "status": 422,
  "warnings": Array [],
}
`;

exports[`API API/Response should normalize the response when the call succeeds 1`] = `
Object {
  "data": Array [],
  "errors": undefined,
  "headers": undefined,
  "meta": undefined,
  "status": 200,
  "warnings": undefined,
}
`;

exports[`API API/testUtils matchRequest should be possible to get the request object 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.example.com/appointments",
}
`;

exports[`API API/testUtils matchRequest should be possible to match multiple requests in one go 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.example.com/appointments",
}
`;

exports[`API API/testUtils matchRequest should be possible to match multiple requests in one go 2`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.example.com/appointments",
}
`;

exports[`API API/testUtils mockResponse should be possible to mock a response (and get defaults) 1`] = `
Object {
  "data": undefined,
  "errors": undefined,
  "headers": undefined,
  "meta": undefined,
  "status": 200,
  "warnings": undefined,
}
`;

exports[`API API/testUtils mockResponse should be possible to mock a response 1`] = `
Object {
  "data": "data goes here",
  "errors": undefined,
  "headers": undefined,
  "meta": "meta data goes here",
  "status": 223,
  "warnings": "warnings go here",
}
`;

exports[`API API/testUtils mockResponse should be possible to mock responses of multiple calls 1`] = `
Object {
  "data": "my appointments data",
  "errors": undefined,
  "headers": undefined,
  "meta": undefined,
  "status": 200,
  "warnings": undefined,
}
`;

exports[`API API/testUtils mockResponse should be possible to mock responses of multiple calls 2`] = `
Object {
  "data": "my subjects data",
  "errors": undefined,
  "headers": undefined,
  "meta": undefined,
  "status": 200,
  "warnings": undefined,
}
`;

exports[`API should expose all available includes on the API instance 1`] = `
Object {
  "accepted_possibility": Object {
    "toString": [Function],
  },
  "answers": Object {
    "toString": [Function],
  },
  "appointments": Object {
    "toString": [Function],
  },
  "contact": Object {
    "employee": Object {
      "toString": [Function],
    },
    "toString": [Function],
    "user": Object {
      "toString": [Function],
    },
  },
  "contacts": Object {
    "employee": Object {
      "toString": [Function],
    },
    "subjects": Object {
      "toString": [Function],
    },
    "toString": [Function],
    "user": Object {
      "toString": [Function],
    },
  },
  "customer": Object {
    "toString": [Function],
  },
  "day_templates": Object {
    "day_time_slots": Object {
      "toString": [Function],
    },
    "toString": [Function],
  },
  "day_time_slots": Object {
    "offices": Object {
      "toString": [Function],
    },
    "toString": [Function],
  },
  "employees": Object {
    "toString": [Function],
  },
  "enterprise": Object {
    "toString": [Function],
  },
  "initiated_by": Object {
    "toString": [Function],
  },
  "languages": Object {
    "toString": [Function],
    "translations": Object {
      "toString": [Function],
    },
  },
  "office": Object {
    "toString": [Function],
  },
  "offices": Object {
    "subject_settings": Object {
      "toString": [Function],
    },
    "toString": [Function],
  },
  "options": Object {
    "toString": [Function],
  },
  "possibilities": Object {
    "created_by": Object {
      "toString": [Function],
    },
    "toString": [Function],
  },
  "question": Object {
    "toString": [Function],
  },
  "questions": Object {
    "toString": [Function],
  },
  "roles": Object {
    "toString": [Function],
  },
  "subject": Object {
    "subject_category": Object {
      "toString": [Function],
    },
    "toString": [Function],
  },
  "subject_category": Object {
    "toString": [Function],
  },
  "subject_settings": Object {
    "toString": [Function],
  },
  "subjects": Object {
    "subject_category": Object {
      "toString": [Function],
    },
    "toString": [Function],
  },
  "sync_accounts": Object {
    "toString": [Function],
  },
  "user": Object {
    "toString": [Function],
  },
  "week_templates": Object {
    "toString": [Function],
    "week_time_slots": Object {
      "toString": [Function],
    },
  },
  "week_time_slots": Object {
    "offices": Object {
      "toString": [Function],
    },
    "toString": [Function],
  },
}
`;

exports[`API should not reflect configuration changes in another instance (locale) 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.example.com/subjects",
}
`;

exports[`API should not reflect configuration changes in another instance (locale) 2`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.example.com/subjects",
}
`;

exports[`API should not reflect configuration changes in another instance (locale) 3`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "fr-BE, fr;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.example.com/subjects",
}
`;

exports[`API should reflect configuration changes in the request (auth_provider) 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.example.com/subjects",
}
`;

exports[`API should reflect configuration changes in the request (auth_provider) 2`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.other.example.com/subjects",
}
`;

exports[`API should reflect configuration changes in the request (locale) 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE, nl;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.example.com/subjects",
}
`;

exports[`API should reflect configuration changes in the request (locale) 2`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "fr-BE, fr;q=0.667, *;q=0.333",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.example.com/subjects",
}
`;

exports[`API should throw an error when an interceptor is added but it is not a function 1`] = `"[RESOURCE]: You tried to call \`.addResponseInterceptor(null)\` but it must receive a function."`;

exports[`API/Auth Providers should be possible to use the \`public_client\` strategy 1`] = `
Object {
  "data": "my subjects data",
  "errors": undefined,
  "headers": undefined,
  "meta": undefined,
  "status": 200,
  "warnings": undefined,
}
`;

exports[`API/Auth Providers should be possible to use the \`token\` strategy 1`] = `
Object {
  "data": "my subjects data",
  "errors": undefined,
  "headers": undefined,
  "meta": undefined,
  "status": 200,
  "warnings": undefined,
}
`;

exports[`API/Auth Providers should error when a parameter is given that is not required or optional or the realm for a certain auth provider strategy 1`] = `
"[IDENTITY PROVIDER]: unnecessary_key is not an optional or a required parameter for \`public_client\`
  - Required parameters: client_id and realm
  - Optional parameters: scope"
`;

exports[`API/Auth Providers should error when a required parameter is not provided for a certain auth provider strategy 1`] = `
"[IDENTITY PROVIDER]: client_id is a required parameter for \`public_client\`
  - Required parameters: client_id and realm
  - Optional parameters: scope"
`;

exports[`API/Auth Providers should error when the \`realm\` is not provided for a certain auth provider strategy 1`] = `
"[IDENTITY PROVIDER]: realm is a required parameter for \`public_client\`
  - Required parameters: client_id and realm
  - Optional parameters: scope"
`;

exports[`API/Config should be possible to create an SDK instance with a list of locales 1`] = `
Object {
  "data": undefined,
  "headers": Object {
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "nl-BE-VWV, nl-BE;q=0.875, nl;q=0.75, en-US;q=0.625, en;q=0.5, fr-BE;q=0.375, fr;q=0.25, *;q=0.125",
    "Authorization": "Bearer fake_example_access_token",
  },
  "method": "get",
  "params": undefined,
  "url": "https://api.example.com/identity",
}
`;

exports[`API/Config should throw an error when onConfigurationChange is not passed a function 1`] = `"[CONFIG]: You tried to call \`.onConfigurationChange(null)\` but it must receive a function."`;

exports[`API/Config should throw an error when overriding items on the configuration object directly 1`] = `"Cannot assign to read only property 'locale' of object '#<Object>'"`;

exports[`API/Config should throw an error when overriding the whole config object 1`] = `"[CONFIG]: You are not allowed to change the configuration object directly. Please use \`.configure({})\` instead."`;
